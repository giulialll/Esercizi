'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'staircase' function below.
 *
 * The function accepts INTEGER n as parameter.
 */

function staircase(n) {
// primo loop esterno per ciclare le righe
    for (let i = 1; i <= n; i++) {
// inizializzazione stringa
      let step='';
//secondo loop interno per ciclare le colonne
        for (let j = 0; j < n; j++){ 
            if (j < n - i){
                step+= ' ';   
            }
            else{
                 step += '#';  
            }
        }
// se j è minore della lunghezza n meno i allora stamperà lo spazio altrimenti stamperà il carattere
        console.log(step);
    }
// questa stampa avviene fuori dal ciclo perchè l'ultimo sarà stampato senza spazio iniziale
  console.log(step.trim());
}


function main() {
    const n = parseInt(readLine().trim(), 10);

    staircase(n);
}
